{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omjay/Code/shadowspeak/src/components/Navbar.tsx"],"sourcesContent":["'use client'\r\n\r\nimport React from \"react\"\r\n\r\n// --- Mock Implementations for Self-Contained Example ---\r\n\r\n// Mock next/link Link component\r\nconst Link = ({ href, children, ...props }: { href: string, children: React.ReactNode, [key: string]: any }) => (\r\n    <a href={href} {...props}>{children}</a>\r\n);\r\n\r\n// Mock next-auth/react hooks and types\r\nconst useSession = () => {\r\n    // To test both states, you can change this mock data\r\n    const mockSession = {\r\n        user: {\r\n            username: 'TestUser',\r\n            email: 'test@example.com'\r\n        },\r\n        expires: '1'\r\n    };\r\n    // Return null to test the logged-out state\r\n    // return { data: null };\r\n    return { data: mockSession };\r\n};\r\n\r\nconst signOut = () => {\r\n    alert('Signing out...');\r\n};\r\n\r\ntype User = {\r\n    username?: string | null;\r\n    email?: string | null;\r\n    name?: string | null;\r\n    image?: string | null;\r\n};\r\n\r\n// Mock ./ui/button component\r\nconst Button = ({ children, ...props }: { children: React.ReactNode, [key: string]: any }) => (\r\n    <button {...props} className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:bg-gray-400\">\r\n        {children}\r\n    </button>\r\n);\r\n\r\n// --- Original Navbar Component ---\r\n\r\nconst Navbar = () => {\r\n    const {data: session} = useSession()\r\n\r\n    const user: User | undefined = session?.user\r\n\r\n    return(\r\n        <nav className=\"p-4 md:p-6 shadow-md bg-white\">\r\n            <div className=\"container mx-auto flex flex-col md:flex-row justify-between items-center\">\r\n                {/* Corrected: Used Link component for navigation */}\r\n                <Link className=\"text-xl font-bold mb-4 md:mb-0\" href=\"/\">\r\n                    Shadow Speak\r\n                </Link>\r\n                {\r\n                    session ? (\r\n                        <div className=\"flex items-center\">\r\n                            <span className=\"mr-4\">Welcome, {user?.username || user?.email}</span>\r\n                            <Button onClick={() => signOut()}>LogOut</Button>\r\n                        </div>\r\n                    ) : (\r\n                        // Corrected: Used Link component for navigation\r\n                        <Link href=\"/sign-in\">\r\n                            <Button className=\"w-full md:w-auto\">Login</Button>\r\n                        </Link>\r\n                    )\r\n                }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n\r\n"],"names":[],"mappings":";;;;;;;AAAA;AAIA,0DAA0D;AAE1D,gCAAgC;AAChC,MAAM,OAAO;QAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,OAAwE;yBACvG,6LAAC;QAAE,MAAM;QAAO,GAAG,KAAK;kBAAG;;;;;;;KADzB;AAIN,uCAAuC;AACvC,MAAM,aAAa;IACf,qDAAqD;IACrD,MAAM,cAAc;QAChB,MAAM;YACF,UAAU;YACV,OAAO;QACX;QACA,SAAS;IACb;IACA,2CAA2C;IAC3C,yBAAyB;IACzB,OAAO;QAAE,MAAM;IAAY;AAC/B;AAEA,MAAM,UAAU;IACZ,MAAM;AACV;AASA,6BAA6B;AAC7B,MAAM,SAAS;QAAC,EAAE,QAAQ,EAAE,GAAG,OAA0D;yBACrF,6LAAC;QAAQ,GAAG,KAAK;QAAE,WAAU;kBACxB;;;;;;;MAFH;AAMN,oCAAoC;AAEpC,MAAM,SAAS;;IACX,MAAM,EAAC,MAAM,OAAO,EAAC,GAAG;IAExB,MAAM,OAAyB,oBAAA,8BAAA,QAAS,IAAI;IAE5C,qBACI,6LAAC;QAAI,WAAU;kBACX,cAAA,6LAAC;YAAI,WAAU;;8BAEX,6LAAC;oBAAK,WAAU;oBAAiC,MAAK;8BAAI;;;;;;gBAItD,wBACI,6LAAC;oBAAI,WAAU;;sCACX,6LAAC;4BAAK,WAAU;;gCAAO;gCAAU,CAAA,iBAAA,2BAAA,KAAM,QAAQ,MAAI,iBAAA,2BAAA,KAAM,KAAK;;;;;;;sCAC9D,6LAAC;4BAAO,SAAS,IAAM;sCAAW;;;;;;;;;;;+DAGtC,gDAAgD;8BAChD,6LAAC;oBAAK,MAAK;8BACP,cAAA,6LAAC;wBAAO,WAAU;kCAAmB;;;;;;;;;;;;;;;;;;;;;;AAOjE;GA5BM;;QACsB;;;MADtB;uCA8BS","debugId":null}}]
}