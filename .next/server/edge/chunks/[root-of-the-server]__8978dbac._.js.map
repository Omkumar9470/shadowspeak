{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\r\nimport { getToken } from \"next-auth/jwt\";\r\n\r\n// Only one middleware function should be exported.\r\nexport async function middleware(request: NextRequest) {\r\n  const token = await getToken({ req: request });\r\n  const url = request.nextUrl;\r\n\r\n  // Scenario 1: User is logged in.\r\n  // Redirect them away from auth pages to the dashboard.\r\n  if (\r\n    token &&\r\n    (url.pathname.startsWith(\"/sign-in\") ||\r\n      url.pathname.startsWith(\"/sign-up\") ||\r\n      url.pathname.startsWith(\"/verify\") ||\r\n      url.pathname === \"/\") // Important: Check for the exact root path\r\n  ) {\r\n    return NextResponse.redirect(new URL(\"/dashboard\", request.url));\r\n  }\r\n\r\n  // Scenario 2: User is NOT logged in and is trying to access a protected route.\r\n  // Redirect them to the sign-in page.\r\n  if (!token && url.pathname.startsWith(\"/dashboard\")) {\r\n    return NextResponse.redirect(new URL(\"/sign-in\", request.url));\r\n  }\r\n\r\n  // If neither of the above, allow the request to continue.\r\n  return NextResponse.next();\r\n}\r\n\r\n// This config specifies which paths the middleware will run on.\r\nexport const config = {\r\n  matcher: [\r\n    \"/sign-in\",\r\n    \"/sign-up\",\r\n    \"/\",\r\n    \"/dashboard/:path*\",\r\n    \"/verify/:path*\",\r\n  ],\r\n};\r\n"],"names":[],"mappings":";;;;;;AAAA;AAAA;AACA;;;AAGO,eAAe,WAAW,OAAoB;IACnD,MAAM,QAAQ,MAAM,IAAA,gKAAQ,EAAC;QAAE,KAAK;IAAQ;IAC5C,MAAM,MAAM,QAAQ,OAAO;IAE3B,iCAAiC;IACjC,uDAAuD;IACvD,IACE,SACA,CAAC,IAAI,QAAQ,CAAC,UAAU,CAAC,eACvB,IAAI,QAAQ,CAAC,UAAU,CAAC,eACxB,IAAI,QAAQ,CAAC,UAAU,CAAC,cACxB,IAAI,QAAQ,KAAK,GAAG,EAAE,2CAA2C;MACnE;QACA,OAAO,gMAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,cAAc,QAAQ,GAAG;IAChE;IAEA,+EAA+E;IAC/E,qCAAqC;IACrC,IAAI,CAAC,SAAS,IAAI,QAAQ,CAAC,UAAU,CAAC,eAAe;QACnD,OAAO,gMAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,YAAY,QAAQ,GAAG;IAC9D;IAEA,0DAA0D;IAC1D,OAAO,gMAAY,CAAC,IAAI;AAC1B;AAGO,MAAM,SAAS;IACpB,SAAS;QACP;QACA;QACA;QACA;QACA;KACD;AACH"}}]
}