{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omjay/Code/shadowspeak/src/app/%28auth%29/sign-up/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as z from \"zod\";\r\nimport axios, { AxiosError } from \"axios\";\r\n\r\n// --- Helper Functions and Schemas (Replaces External Imports) ---\r\n\r\n// Replicates useDebounce from 'usehooks-ts'\r\nconst useDebounce = <T,>(value: T, delay: number): T => {\r\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n  return debouncedValue;\r\n};\r\n\r\n// Replicates useRouter from 'next/navigation'\r\nconst useRouter = () => ({\r\n  replace: (path: string) => {\r\n    if (typeof window !== 'undefined') {\r\n      console.log(`Navigating to: ${path}`);\r\n      // In a real app, this changes the URL. Here we log it for demonstration.\r\n    }\r\n  }\r\n});\r\n\r\n// Replicates signUpSchema from '@/schemas/signUpSchema'\r\nconst signUpSchema = z.object({\r\n  username: z.string().min(2, \"Username must be at least 2 characters\"),\r\n  email: z.string().email({ message: \"Invalid email address\" }),\r\n  password: z.string().min(6, { message: \"Password must be at least 6 characters\" }),\r\n});\r\n\r\n// Replicates ApiResponse type from '@/types/ApiResponse'\r\ninterface ApiResponse {\r\n  message: string;\r\n  success: boolean;\r\n}\r\n\r\n// Mock Loader icon\r\nconst Loader2 = ({ className }: { className?: string }) => (\r\n    <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n        <path d=\"M21 12a9 9 0 1 1-6.219-8.56\" />\r\n    </svg>\r\n);\r\n\r\n\r\n// --- Main Page Component ---\r\n\r\nconst SignUpForm = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [usernameMessage, setUsernameMessage] = useState('');\r\n  const [isCheckingUsername, setIsCheckingUsername] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const debouncedUsername = useDebounce(username, 300);\r\n\r\n  const router = useRouter();\r\n  \r\n  // Mock useToast hook based on reference\r\n  const useToast = () => ({\r\n    toast: (options: { title: string, description: string, variant?: string }) => {\r\n      alert(`${options.title}: ${options.description}`);\r\n    }\r\n  });\r\n  const { toast } = useToast();\r\n\r\n  const form = useForm<z.infer<typeof signUpSchema>>({\r\n    resolver: zodResolver(signUpSchema),\r\n    defaultValues: {\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    const checkUsernameUnique = async () => {\r\n      if (debouncedUsername) {\r\n        setIsCheckingUsername(true);\r\n        setUsernameMessage(''); // Reset message\r\n        try {\r\n          // Mocking the API call for demonstration in this environment\r\n          await new Promise(resolve => setTimeout(resolve, 500));\r\n          const response = { data: { message: 'Username is unique', success: true } }; // Mock success\r\n          // In a real app, this would be:\r\n          // const response = await axios.get<ApiResponse>(\r\n          //   `/api/check-username-unique?username=${debouncedUsername}`\r\n          // );\r\n          setUsernameMessage(response.data.message);\r\n        } catch (error) {\r\n          const axiosError = error as AxiosError<ApiResponse>;\r\n          setUsernameMessage(\r\n            axiosError.response?.data.message ?? 'Error checking username'\r\n          );\r\n        } finally {\r\n          setIsCheckingUsername(false);\r\n        }\r\n      }\r\n    };\r\n    checkUsernameUnique();\r\n  }, [debouncedUsername]);\r\n\r\n  const onSubmit = async (data: z.infer<typeof signUpSchema>) => {\r\n    setIsSubmitting(true);\r\n    try {\r\n      // In a real app, this axios.post call would hit your backend API.\r\n      // The backend would then handle user creation and sending the verification email.\r\n      // const response = await axios.post<ApiResponse>('/api/sign-up', data);\r\n\r\n      // --- MOCKING API CALL FOR THIS ENVIRONMENT ---\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      // The backend would typically send back a message like this on success.\r\n      const mockResponse = { data: { message: 'Successfully registered! A verification code has been sent to your email.', success: true } };\r\n      // --- END OF MOCK ---\r\n\r\n      toast({\r\n        title: 'Success',\r\n        description: mockResponse.data.message,\r\n      });\r\n\r\n      // Redirect to the page where the user can enter the verification code.\r\n      router.replace(`/verify/${data.username}`);\r\n\r\n    } catch (error) {\r\n      console.error('Error during sign-up:', error);\r\n      const axiosError = error as AxiosError<ApiResponse>;\r\n      let errorMessage = axiosError.response?.data.message ?? 'There was a problem with your sign-up. Please try again.';\r\n\r\n      toast({\r\n        title: 'Sign Up Failed',\r\n        description: errorMessage,\r\n        variant: 'destructive',\r\n      });\r\n    } finally {\r\n        setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex justify-center items-center min-h-screen bg-gray-100\">\r\n      <div className=\"w-full max-w-md p-8 space-y-8 bg-white rounded-lg shadow-md\">\r\n        <div className=\"text-center\">\r\n          <h1 className=\"text-4xl font-extrabold tracking-tight lg:text-5xl mb-6\">\r\n            Join Mystery Message\r\n          </h1>\r\n          <p className=\"mb-4\">Sign up to start your anonymous adventure</p>\r\n        </div>\r\n        <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\r\n            {/* Username Field */}\r\n            <div>\r\n                <label className=\"block text-sm font-medium text-gray-700\">Username</label>\r\n                <input\r\n                    placeholder=\"username\"\r\n                    className=\"w-full mt-1 p-2 border border-gray-300 rounded-md\"\r\n                    {...form.register(\"username\")}\r\n                    onChange={(e) => {\r\n                        form.setValue(\"username\", e.target.value);\r\n                        setUsername(e.target.value);\r\n                    }}\r\n                />\r\n                {isCheckingUsername && <Loader2 className=\"animate-spin mt-2\" />}\r\n                {!isCheckingUsername && usernameMessage && (\r\n                    <p className={`text-sm mt-2 ${\r\n                        usernameMessage === 'Username is unique'\r\n                            ? 'text-green-500'\r\n                            : 'text-red-500'\r\n                    }`}>\r\n                        {usernameMessage}\r\n                    </p>\r\n                )}\r\n                {form.formState.errors.username && <p className=\"text-red-500 text-sm mt-1\">{form.formState.errors.username.message}</p>}\r\n            </div>\r\n\r\n            {/* Email Field */}\r\n            <div>\r\n                <label className=\"block text-sm font-medium text-gray-700\">Email</label>\r\n                <input \r\n                    placeholder=\"email\"\r\n                    className=\"w-full mt-1 p-2 border border-gray-300 rounded-md\"\r\n                    {...form.register(\"email\")}\r\n                />\r\n                {form.formState.errors.email && <p className=\"text-red-500 text-sm mt-1\">{form.formState.errors.email.message}</p>}\r\n            </div>\r\n            \r\n            {/* Password Field */}\r\n            <div>\r\n                <label className=\"block text-sm font-medium text-gray-700\">Password</label>\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"password\"\r\n                    className=\"w-full mt-1 p-2 border border-gray-300 rounded-md\"\r\n                    {...form.register(\"password\")}\r\n                />\r\n                {form.formState.errors.password && <p className=\"text-red-500 text-sm mt-1\">{form.formState.errors.password.message}</p>}\r\n            </div>\r\n\r\n            <button type=\"submit\" className='w-full py-2 px-4 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:bg-gray-400' disabled={isSubmitting}>\r\n                {isSubmitting ? (\r\n                    <div className=\"flex items-center justify-center\">\r\n                        <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\r\n                        Please wait\r\n                    </div>\r\n                ) : (\r\n                    'Sign Up'\r\n                )}\r\n            </button>\r\n        </form>\r\n        <div className=\"text-center mt-4\">\r\n          <p>\r\n            Already a member?{' '}\r\n            <a href=\"/sign-in\" className=\"text-blue-600 hover:text-blue-800\">\r\n              Sign in\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n\r\n"],"names":[],"mappings":"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","debugId":null}}]
}