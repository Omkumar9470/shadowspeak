{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omjay/Code/shadowspeak/src/context/AuthProvider.tsx"],"sourcesContent":[" 'use client';\r\n \r\n import { SessionProvider } from 'next-auth/react';\r\n import React from 'react';\r\n \r\n export default function AuthProvider({\r\n   children,\r\n }: {\r\n   children: React.ReactNode;\r\n }) {\r\n   return <SessionProvider>{children}</SessionProvider>;\r\n }"],"names":[],"mappings":";;;;;AAEC;AAFA;;;AAKe,SAAS,aAAa,EACnC,QAAQ,EAGT;IACC,qBAAO,8OAAC,iKAAe;kBAAE;;;;;;AAC3B","debugId":null}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omjay/Code/shadowspeak/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,sKAAO,EAAC,IAAA,6IAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omjay/Code/shadowspeak/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-10 px-4 py-2\",\r\n        sm: \"h-9 rounded-md px-3\",\r\n        lg: \"h-11 rounded-md px-8\",\r\n        icon: \"h-10 w-10\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\"\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,IAAA,uKAAG,EACxB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,mNAAgB,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,wKAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,IAAA,yHAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/omjay/Code/shadowspeak/src/components/Navbar.tsx"],"sourcesContent":["'use client'\r\n\r\nimport React from 'react';\r\nimport Link from 'next/link';\r\nimport { useSession, signOut } from 'next-auth/react';\r\nimport { User } from 'next-auth';\r\nimport { Button } from './ui/button'; // Assuming a shadcn/ui button component\r\n\r\n// --- Original Navbar Component ---\r\n\r\nconst Navbar = () => {\r\n    const {data: session} = useSession()\r\n\r\n    const user: User | undefined = session?.user;\r\n\r\n    return(\r\n        <nav className=\"p-4 md:p-6 shadow-md bg-white\">\r\n            <div className=\"container mx-auto flex flex-col md:flex-row justify-between items-center\">\r\n                {/* Corrected: Used Link component for navigation */}\r\n                <Link className=\"text-xl font-bold mb-4 md:mb-0\" href=\"/\">\r\n                    Shadow Speak\r\n                </Link>\r\n                {\r\n                    session ? (\r\n                        <div className=\"flex items-center\">\r\n                            <span className=\"mr-4\">Welcome, {user?.username || user?.name}</span>\r\n                            <Button onClick={() => signOut()} className=\"w-full md:w-auto\">Logout</Button>\r\n                        </div>\r\n                    ) : (\r\n                        // Corrected: Used Link component for navigation\r\n                        <Link href=\"/sign-in\">\r\n                            <Button className=\"w-full md:w-auto\">Login</Button>\r\n                        </Link>\r\n                    )\r\n                }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n"],"names":[],"mappings":";;;;;AAGA;AACA;AAEA,mOAAsC,wCAAwC;AAN9E;;;;;AAQA,oCAAoC;AAEpC,MAAM,SAAS;IACX,MAAM,EAAC,MAAM,OAAO,EAAC,GAAG,IAAA,4JAAU;IAElC,MAAM,OAAyB,SAAS;IAExC,qBACI,8OAAC;QAAI,WAAU;kBACX,cAAA,8OAAC;YAAI,WAAU;;8BAEX,8OAAC,uKAAI;oBAAC,WAAU;oBAAiC,MAAK;8BAAI;;;;;;gBAItD,wBACI,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAK,WAAU;;gCAAO;gCAAU,MAAM,YAAY,MAAM;;;;;;;sCACzD,8OAAC,4IAAM;4BAAC,SAAS,IAAM,IAAA,yJAAO;4BAAI,WAAU;sCAAmB;;;;;;;;;;;+DAGnE,gDAAgD;8BAChD,8OAAC,uKAAI;oBAAC,MAAK;8BACP,cAAA,8OAAC,4IAAM;wBAAC,WAAU;kCAAmB;;;;;;;;;;;;;;;;;;;;;;AAOjE;uCAEe","debugId":null}}]
}